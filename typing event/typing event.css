*{
    padding: 0;
    box-sizing: border-box;
    list-style: none;
    /* outline: 1px dashed purple; */
    /* 全局设置 */
}

body{
    outline-width: 3px;
    display: flex;
    height: 100vh;
    justify-content: center;
    /* 在水平方向居中 */
    align-items: center;
    /* 在垂直方向居中 */
    background-color: black;
}

.keyboard{
    outline-width: 3px;

}
ul.row{
    display: flex;
    /* flex:弹性布局 */
    /* height: 300px; */
}
ul.row li{
    outline-width: 2px;
    /* 设置每行距离 */
    width: 3em;
    height: 3em;
    /* rem是相对于根标签，em相对于当前字体 */
    text-align: center;
    /* 左右居中 */
    line-height: 3em;
    /* 上下居中 */
    border-radius: .4em;
    border: 2px solid;
    color: rgba(0,0,0,.7);
    /* 调整字体颜色透明度（不是纯黑色） */
    letter-spacing: 1px;
    /* 调整字间距 */
    margin: 0.4em;
}

#tab{
    width: 5em;
}
#CapsLK{
    width: 6em;
}
#leftShift{
    width: 8em;
}
#rightShift{
    width: 8em;
}
#Enter{
    width: 6em;
}
#back{
    width: 5em;
}
/* 调整不同键位的方块大小 */

.finger4{
    background-color: rgb(26, 161, 59);
    /* 设置背景色 */
    border: 2px solid rgb(26, 161, 59);
    /* 设置边框颜色 */
}
.finger4.selected{
    background-color: transparent;
    /* 选中时背景透明 */
    color: rgb(26, 161, 59);
    /* 选中情况下的样式 */
}

.finger3{
    background-color: rgb(149, 235, 171);
    border: 2px solid rgb(149, 235, 171);
}
.finger3.selected{
    background-color: transparent;
    color: rgb(149, 235, 171);
}

.finger2{
    background-color: rgb(185, 245, 238);
    border: 2px solid rgb(185, 245, 238);
}
.finger2.selected{
    background-color: transparent;
    color: rgb(185, 245, 238);
}

.finger1{
    background-color: rgb(232, 234, 247);
    border: 2px solid rgb(232, 234, 247);
}
.finger1.selected{
    background-color: transparent;
    color: rgb(232, 234, 247);
}

.selected{
    animation: selected .3s infinite;
    /* animation 属性用来指定一组或多组动画，每组之间用逗号相隔。 */
    /* 抖动时间为0.3秒，infinite一直执行 */
}
@keyframes selected {
    /* keyframes：关键帧，控制 CSS 动画序列中的中间步骤。（可控制中间步骤） */
    /* %表示时间段 */
    0%{
        transform: translate(0);
    }
    20% {
        transform: translate(-2px, 2px);
    }
    /* transform:translate(x,y)：变动，位移； */
    40% {
        transform: translate(-2px, -2px);
    }
    60%{
        transform: translate(2px, -2px);
    }
    80%{
        transform: translate(2px, 2px);
    }
    100%{
        transform: translate(0);
    }
    /* 根据时间序列设置方块的抖动方向和抖动效果 */
}

.press{
    animation: press .3s;
}
@keyframes  press {
    0%{
        transform: scale(1.2);
    }
    /* transform:scale(x,y)：等比例缩放  值为负数则是缩小 */
    100%{
        transform: scale(1);
    }  
}
/* 添加按压的动画效果 */

